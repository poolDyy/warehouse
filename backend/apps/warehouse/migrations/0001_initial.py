# Generated by Django 5.1.6 on 2025-04-29 10:04

import apps.warehouse.models.file_attachment
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('unit', '0002_unitgrouptranslation_unit_unitgr_group_i_ddbeae_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('archived', 'Архивировано')], default='published', max_length=20, verbose_name='Статус')),
                ('title', models.CharField(max_length=255, verbose_name='Категория')),
                ('category_type', models.CharField(choices=[('product', 'Продукты'), ('material', 'Материалы'), ('resource', 'Ресурсы')], max_length=255, verbose_name='Тип категории')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь внесший изменения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='FileAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('file', models.FileField(upload_to=apps.warehouse.models.file_attachment.get_attachment_upload_path, verbose_name='Файл')),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ['product', 'material', 'resource', 'warehouse']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('archived', 'Архивировано')], default='published', max_length=20, verbose_name='Статус')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена')),
                ('notes', models.TextField(blank=True, default='', verbose_name='Заметки')),
                ('remaining', models.DecimalField(decimal_places=4, default=0, max_digits=12, verbose_name='Остаток')),
                ('min_remaining', models.DecimalField(decimal_places=4, max_digits=12, null=True, verbose_name='Минимальный остаток')),
                ('sku', models.CharField(blank=True, default='', max_length=255, verbose_name='SKU')),
                ('categories', models.ManyToManyField(to='warehouse.category', verbose_name='Категории')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='unit.unit', verbose_name='Единица измерения')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь внесший изменения')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProductComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Количество')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ['material', 'resource']}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='warehouse.product', verbose_name='Продукт')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='unit.unit', verbose_name='Единица измерения')),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('archived', 'Архивировано')], default='published', max_length=20, verbose_name='Статус')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование')),
                ('is_depreciation', models.BooleanField(default=False, verbose_name='Амортизация')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Цена')),
                ('initial_price', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Первоначальная стоимость')),
                ('service_life', models.DecimalField(decimal_places=4, max_digits=12, null=True, verbose_name='Срок службы')),
                ('notes', models.TextField(blank=True, default='', verbose_name='Заметки')),
                ('categories', models.ManyToManyField(related_name='resources', to='warehouse.category', verbose_name='Категории')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resources', to='unit.unit', verbose_name='Единица измерения')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь внесший изменения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ресурс',
                'verbose_name_plural': 'Ресурсы',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('archived', 'Архивировано')], default='published', max_length=20, verbose_name='Статус')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование')),
                ('storage_type', models.CharField(choices=[('material', 'Материалы'), ('product', 'Продукты')], max_length=20, verbose_name='Тип склада')),
                ('categories', models.ManyToManyField(related_name='warehouses', to='warehouse.category', verbose_name='Категории')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь внесший изменения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='warehouses', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склад',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='warehouse',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='warehouse.warehouse', verbose_name='Склад'),
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('archived', 'Архивировано')], default='published', max_length=20, verbose_name='Статус')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена')),
                ('notes', models.TextField(blank=True, default='', verbose_name='Заметки')),
                ('remaining', models.DecimalField(decimal_places=4, default=0, max_digits=12, verbose_name='Остаток')),
                ('min_remaining', models.DecimalField(decimal_places=4, max_digits=12, null=True, verbose_name='Минимальный остаток')),
                ('sku', models.CharField(blank=True, default='', max_length=255, verbose_name='SKU')),
                ('categories', models.ManyToManyField(to='warehouse.category', verbose_name='Категории')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='unit.unit', verbose_name='Единица измерения')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь внесший изменения')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='warehouse.warehouse', verbose_name='Склад')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['user'], name='warehouse_c_user_id_cd667b_idx'),
        ),
        migrations.AddIndex(
            model_name='fileattachment',
            index=models.Index(fields=['content_type', 'object_id'], name='warehouse_f_content_744c66_idx'),
        ),
        migrations.AddIndex(
            model_name='productcomponent',
            index=models.Index(fields=['content_type', 'object_id'], name='warehouse_p_content_46748a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productcomponent',
            unique_together={('product', 'content_type', 'object_id')},
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['unit'], name='warehouse_r_unit_id_b72576_idx'),
        ),
        migrations.AddIndex(
            model_name='resource',
            index=models.Index(fields=['user'], name='warehouse_r_user_id_0aabbd_idx'),
        ),
        migrations.AddConstraint(
            model_name='resource',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('initial_price__isnull', True), ('is_depreciation', False), ('price__isnull', False), ('service_life__isnull', True)), models.Q(('initial_price__isnull', False), ('is_depreciation', True), ('price__isnull', True), ('service_life__isnull', False)), _connector='OR'), name='resource_depreciation_constraint'),
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['user'], name='warehouse_w_user_id_59138c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['warehouse'], name='warehouse_p_warehou_2a34e6_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['unit'], name='warehouse_p_unit_id_1778d7_idx'),
        ),
        migrations.AddIndex(
            model_name='material',
            index=models.Index(fields=['warehouse'], name='warehouse_m_warehou_720182_idx'),
        ),
        migrations.AddIndex(
            model_name='material',
            index=models.Index(fields=['unit'], name='warehouse_m_unit_id_716b6e_idx'),
        ),
    ]
